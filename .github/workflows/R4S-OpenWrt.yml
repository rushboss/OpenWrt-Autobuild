name: R4S-OpenWrt

on:
  push:
    branches: 
      - main
    paths:
      - '.github/workflows/R4S-OpenWrt.yml'
      - 'SEED/R4S/config.seed'
      - 'SEED/extra.cfg'
      - 'SCRIPTS/switch'
  watch:
 # types: [started]

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 512
        temp-reserve-mb: 100
        root-reserve-mb: 2048
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
    - name: Checkout
      uses: actions/checkout@main
    - name: Show CPU Model
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        ulimit -a
    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install aria2
        sudo -E wget -P /usr/local/sbin/ https://github.com/HiGarfield/lede-17.01.4-Mod/raw/master/.github/backup/apt-fast
        sudo -E chmod -R 755 /usr/local/sbin/apt-fast
        sudo -E apt-fast -y -qq install dwarves llvm clang lldb lld build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget ccache curl swig coreutils vim nano python3 python3-dev python3-pip python3-ply python3-pyelftools lrzsz scons
        pip3 install --user -U pylibfdt
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo -E git config --global core.abbrev auto
        df -h
    - name: Prepare Mixedwrt
      run: |
        sudo chown -R runner:runner /home/runner/work/OpenWrt-Autobuild
        cp -r ./SCRIPTS/R4S/. ./SCRIPTS/
        cp -r ./SCRIPTS/. ./
        /bin/bash 01_get_ready.sh
    - name: Prepare Package
      run: |
        cd openwrt
        cp -r ../SCRIPTS/. ./
        /bin/bash 02_prepare_package.sh
        /bin/bash 02_R4S.sh
    - name: Convert Translation
      run: |
        cd openwrt
        /bin/bash 03_convert_translation.sh
    - name: Remove Upx
      run: |
        cd openwrt
        /bin/bash 04_remove_upx.sh
    - name: Add ACL
      run: |
        cd openwrt
        /bin/bash 05_create_acl_for_luci.sh -a
    - name: Make Config
      run: |
        cd openwrt
        mv ../SEED/R4S/config.seed .config
        make defconfig
    - name: Smart chmod
      run: |
        MY_Filter=$(mktemp)
        echo '/\.git' >  ${MY_Filter}
        echo '/\.svn' >> ${MY_Filter}
        find ./ -maxdepth 1 | grep -v '\./$' | grep -v '/\.git' | xargs -s1024 chmod -R u=rwX,og=rX
        find ./ -type f | grep -v -f ${MY_Filter} | xargs -s1024 file | grep 'executable\|ELF' | cut -d ':' -f1 | xargs -s1024 chmod 755
        rm -f ${MY_Filter}
        unset MY_Filter
    - name: Make Download
      run: |
        cd openwrt
        make download -j48
    - name: Make Toolchain
      run: |
        cd openwrt
        IGNORE_ERRORS=1 make toolchain/install -j$(($(nproc) + 1)) V=s
    - name: Compile Openwrt
      run: |
        cd openwrt
        IGNORE_ERRORS=1 make -j$(($(nproc) + 1)) V=s
    - name: Cleaning
      run: |
        cd openwrt/bin/targets/rockchip/armv8
        /bin/bash ../../../../../SCRIPTS/06_cleaning.sh
    - name: Print Disk Space After
      run: df -h
    - name: Upload Firmwares
      uses: actions/upload-artifact@main
      with:
        name: R4S-OpenWrt
        path: openwrt/bin/targets/rockchip/armv8/
